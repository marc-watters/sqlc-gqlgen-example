package gqlgen

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"

	"github.com/marc-watters/sqlc-gqlgen-example/v2/pgx"
)

// Agent is the resolver for the agent field.
func (r *authorResolver) Agent(ctx context.Context, obj *pgx.Author) (*pgx.Agent, error) {
	return r.DataLoaders.Retrieve(ctx).AgentByAuthorID.Load(obj.ID)
}

// Books is the resolver for the books field.
func (r *authorResolver) Books(ctx context.Context, obj *pgx.Author) ([]*pgx.Book, error) {
	return r.Repository.ListBooksByAuthorID(ctx, obj.ID)
}

// Author returns AuthorResolver implementation.
func (r *Resolver) Author() AuthorResolver { return &authorResolver{r} }

type authorResolver struct{ *Resolver }
